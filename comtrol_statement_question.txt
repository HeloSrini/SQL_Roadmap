1.Write a PL/SQL program to arrange the number of two variable in such a way that the small number will store in num_small 
variable and large number will store in num_large variable.

DECLARE
 A NUMBER (10):= &A;
 B NUMBER (10):= &B;
 MINS NUMBER (10);
 MAXS NUMBER (10);

BEGIN
  IF A > B THEN
      MAXS := A;
      DBMS_OUTPUT.PUT_LINE('LARGER NUMBER IS:' || MAXS);
  ELSE 
     MINS :=A;
     DBMS_OUTPUT.PUT_LINE (MINS);
  END IF;
  IF A < B THEN
      MINS := B;
      DBMS_OUTPUT.PUT_LINE('SMALLERE NUMBER IS:' || MINS);
  ELSE 
     MAXS :=B;
     DBMS_OUTPUT.PUT_LINE ('SMALLER');
  END IF;
END;
/
__________________________________________________________________________________

2.Write a PL/SQL procedure to calculate the incentive on a target achieved 
and display the message either the record updated or not.

____________________________________________________________________________________
3.Write a PL/SQL program to check whether a number is even or odd.

DECLARE
  A NUMBER(10):=&A;
BEGIN
   IF MOD(A,2)=0 THEN
      DBMS_OUTPUT.PUT_LINE('EVEN NUMBER :' || A);
   ELSE 
      DBMS_OUTPUT.PUT_LINE('ODD NUMBER :' || A);
   END IF;
END;

_____________________________________________________________________________________

4.Write a PL/SQL procedure to calculate the incentive on a specific target 
   otherwise a general incentive to be paid using IF-THEN-ELSE.

5.Write a PL/SQL program to check whether a date falls on weekend i.e. SATURDAY or SUNDAY.

DECLARE
  date VARCHAR2(10):= &DATE;
  Week 1 VARCHAR2(10) := 'SUNDAY';
  Week 2 VARCHAR2(10) := 'SATURDAY';

BEGIN
  IF TO_CHAR(TO_DATE('12-JAN-2023'),'DAY')='SUNDAY' OR 
        TO_CHAR(TO_DATE('12-JAN-2023'),'DAY')='SATURDAY' THEN
        DBMS_OUTPUT.PUT_LINE('IT'S A WEEKEND');
  ELSE
        DBMS_OUTPUT.PUT_LINE('IT'S NOT A WEEKEND');
  END IF;
END;
/
      
__________________________________________________________________________________________  

6.Write a PL/SQL procedure to calculate incentive achieved according to the specific sale limit.

7.Write a PL/SQL program to count number of employees in department 50 and check whether this department have any vacancies or not. 
There are 45 vacancies in this department.

______________________________________________________________________________
8.Write a PL/SQL program to display the description against a grade.

DECLARE
   ENG NUMBER := &INP1;
   TAM NUMBER := &INP2;
   MAT NUMBER := &INP3;
   SCI NUMBER := &INP4;
   SOC NUMBER := &INP5;
   TOTAL NUMBER;
   AVERAGE NUMBER;
   GRADE VARCHAR(5);

BEGIN
   TOTAL := ENG + TAM + MAT + SCI + SOC;
   AVERAGE := TOTAL / 5;

   IF AVERAGE >= 90 THEN
      GRADE := 'A';
   ELSIF AVERAGE >= 80 THEN
      GRADE := 'B';
   ELSIF AVERAGE >= 70 THEN
      GRADE := 'C';
   ELSIF AVERAGE >= 60 THEN
      GRADE := 'D';
   ELSIF AVERAGE >= 50 THEN
      GRADE := 'E';
   ELSE
      GRADE := 'F';
   END IF;

   DBMS_OUTPUT.PUT_LINE('Total Marks: ' || TOTAL);
   DBMS_OUTPUT.PUT_LINE('Average Marks: ' || AVERAGE);
   DBMS_OUTPUT.PUT_LINE('Grade: ' || GRADE);

END;
/
____________________________________________________________________

9.Write a PL/SQL program to count number of employees in a specific department and check whether this department 
have any vacancies or not. If any vacancies, how many vacancies are in that department.

DECLARE 
V_count  number(10) :=10;

BEGIN
 FOR I IN 1


10.Write a PL/SQL program to display the description against a grade using CASE statement
